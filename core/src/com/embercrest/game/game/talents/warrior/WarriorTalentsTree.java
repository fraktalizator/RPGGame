package com.embercrest.game.game.talents.warrior;

import com.embercrest.game.game.entities.PartyCharacter;
import com.embercrest.game.game.talents.Talent;
import com.embercrest.game.game.talents.TalentsTree;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

public class WarriorTalentsTree extends TalentsTree {
    public WarriorTalentsTree(PartyCharacter partyCharacter) {
        super(partyCharacter);
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        HeavyArm heavyArm = new HeavyArm(this);
        addTalent(heavyArm);
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(null);
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(null);
        HeavyArm heavyArm1 = new HeavyArm(this);
        ArrayList<Talent> talents = new ArrayList<>();
        talents.add(heavyArm);
        DependantTalents.put(heavyArm1, talents);
        heavyArm1.setLocked(false);
        addTalent(heavyArm1);
        addTalent(null);
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(null);
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        row();
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));
        addTalent(new HeavyArm(this));

    }
}
